#!/usr/bin/env python
"""
Prune the archive of corrupted exposures.
"""
import os,sys
import logging

import numpy as np
import fitsio

from archive.parser import VerboseAction, Parser
from archive.local import get_inventory
from archive import DIRNAME,BASENAME,BASEDIR

def parser():
    parser = Parser(description=__doc__)
    parser.add_argument('--outdir',default=BASEDIR,
                        help='directory of local archive')
    parser.add_argument('-m','--min-size',default=250,type=float,
                        help='minimum file size (MB)')
    return parser
   

if __name__ == "__main__":
    args = parser().parse_args()

    logging.info("Loading local inventory...")
    inv = get_inventory(args.outdir)
    files = inv['filename']
    nfiles = len(files)
    width = len(str(nfiles))
    
    logging.info("Pruning %s files..."%nfiles)
    for i,f in enumerate(files):
        if i%1000==0: 
            info = '({:>{width}}/{}): {}'.format(i+1,nfiles,f,width=width)
            logging.info(info)

        # Ignore (trust) links for now
        if os.path.islink(f): continue

        # Check for small files
        if os.path.getsize(f)/1024**2 < args.min_size:
            # Check number of HDUs
            try: 
                if len(fitsio.FITS(f)) == 71: continue
            except IOError: 
                pass

            # Remove the corrupted file
            logging.info('Removing %s...'%f)
            if not args.dryrun: os.remove(f)
